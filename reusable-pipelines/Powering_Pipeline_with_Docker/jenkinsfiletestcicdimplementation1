pipeline {
    agent none  // No default agent; specify agents at stage level

    environment {
        SONAR_HOST_URL = 'http://sonarqube:9000'  // Ensure this matches your SonarQube server URL
    }

    stages {
        stage('Checkout Code') {
            agent { label 'docker-capable' }
            steps {
                checkout scm
            }
        }

        stage('Audit Tools') {
            agent { label 'docker-capable' }
            steps {
                dir('java-tomcat-sample') {
                    sh '''
                        java -version
                        mvn -version
                    '''
                    sh 'printenv'
                    sh 'ls -l'
                }
            }
        }

        stage('Unit Test') {
            agent { label 'docker-capable' }
            steps {
                dir('java-tomcat-sample') {
                    sh 'mvn test'
                }
            }
        }

        stage('SonarQube Analysis') {
            agent { label 'docker-capable' }
            steps {
                dir('java-tomcat-sample') {
                    script {
                        withSonarQubeEnv('SonarQube_Server') {
                            sh "mvn clean verify sonar:sonar"
                        }
                    }
                }
            }
        }

        stage('Build and Package') {
            agent { label 'docker-capable' }
            steps {
                dir('java-tomcat-sample') {
                    sh 'mvn clean package'
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up workspace'
            deleteDir()
        }
    }
}
